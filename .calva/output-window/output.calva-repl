; This is the Calva REPL Window.
; It's just a file, really, with some special treatment from Calva.
; Use it as a REPL input prompt if you like. (When the REPL is connected.)
; TIPS: The keyboard shortcut `ctrl+alt+o r` shows and focuses this window
; Please see https://calva.io/repl-window/ for more info.
; Happy coding! ♥️

; TIPS: As with any Clojure file when the REPL is connected:
; - `alt+enter` evaluates the current top level form.
; - `ctrl+enter` evaluates the current form.
; Special for this file:
; - `alt+up` and `alt+down` traverse up and down the REPL command history
;    when the cursor is after the last contents at the prompt
; 
; See also the Calva Inspector: https://calva.io/inspector/

PLEASE NOTE
We will update the default location of this file.
The new default location will be
  "<projectRootPath>/.calva/repl.calva-repl"
For now the legacy path is used by default.
To give yourself a smooth transition, you can opt in
to the change, by configuring this setting as false:
  "calva.useLegacyReplWindowPath"
and then add "**/.calva/repl.calva-repl" to your ".gitignore" file.


This file is configured as the output destination for all REPL output.
You can configure this with the setting:
  "calva.outputDestinations"


; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: (cd /home/dunja/tools_methods_project; lein update-in :dependencies conj '[nrepl,"1.1.1"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.47.1"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- with-profile +dev repl :headless)
; Using host:port 127.0.0.1:46049 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉tools-methods-project.core꞉> 
"Please see https://calva.io/output/#about-stdout-in-the-repl-window
about why stdout printed to this file is prepended with `;` to be line comments."
clj꞉tools-methods-project.core꞉> 
; Jack-in done.
clj꞉tools-methods-project.core꞉> 
; Evaluating file: specialist_chat.clj
; 
; ; clj  tools-methods-project.specialist-chat 
; Execution error (AssertionError) at clojure.core.async/<! (async.clj:144).
; Assert failed: <! used not in (go ...) block
; nil
; Evaluation of file specialist_chat.clj failed: class clojure.lang.Compiler$CompilerException
clj꞉tools-methods-project.specialist-chat꞉> 
; Evaluating file: specialist_chat.clj
; Dunja: Hi Pera!
; Pera: Hi Dunja!
; Dunja's Messages:  [{:message woo, :sender Zika} {:message Hi Dunja!, :sender Pera}]
; Pera's Messages With Dunja:  ({:message Hi Pera!, :sender Dunja})
nil
clj꞉tools-methods-project.specialist-chat꞉> 
; Dunja: Do you like to read?
; Pera: How's it going?
; Pera: I think we should plan a trip!Dunja: What’s your biggest goal right now?
; 
; Dunja: What's the most exciting thing that's happened to you this week?Pera: Hello there!
; 
; Pera: Do you believe in aliens?Dunja: What’s new with you?
; 
; Pera: Do you want to grab a coffee sometime?Dunja: What’s your favorite food?
; 
; Dunja: Omg you are so boring!Pera: I think we should plan a trip!
; 
; Pera: Do you believe in aliens?Dunja: Do you like to read?
; 
; Pera: What’s new with you?
; Dunja: Omg you are so boring!
; Dunja: What’s new with you?Pera: What's the most exciting thing that's happened to you this week?
; 
; Pera: Do you believe in aliens?
; Dunja: What's the most exciting thing that's happened to you this week?
; Dunja: What are you up to?
; Pera: Do you like to read?
; Pera has left the chat
; Dunja has left the chat
; Evaluating file: symptom_checker.clj
#'tools-methods-project.symptom-checker/check-symptoms
clj꞉tools-methods-project.symptom-checker꞉> 
; Evaluating file: symptoms_history.clj
#'tools-methods-project.symptoms-history/clear-history
clj꞉tools-methods-project.symptoms-history꞉> 
; Evaluating file: symptom_checker.clj
#'tools-methods-project.symptom-checker/check-symptoms
clj꞉tools-methods-project.symptom-checker꞉> 
; Evaluating file: symptom_checker.clj
#'tools-methods-project.symptom-checker/check-symptoms
clj꞉tools-methods-project.symptom-checker꞉> 
#'tools-methods-project.symptoms-history/symptom-history
clj꞉tools-methods-project.symptoms-history꞉> 
#'tools-methods-project.symptoms-history/add-to-history
clj꞉tools-methods-project.symptoms-history꞉> 
#'tools-methods-project.symptoms-history/get-history
clj꞉tools-methods-project.symptoms-history꞉> 
#'tools-methods-project.symptoms-history/clear-history
clj꞉tools-methods-project.symptoms-history꞉> 
#'tools-methods-project.symptom-checker/symptom-disease-map
clj꞉tools-methods-project.symptom-checker꞉> 
"Neurologist"
clj꞉tools-methods-project.symptom-checker꞉> 
#'tools-methods-project.symptom-checker/disease-specialist-map
clj꞉tools-methods-project.symptom-checker꞉> 
#'tools-methods-project.symptom-checker/predict-diagnoses
clj꞉tools-methods-project.symptom-checker꞉> 
#'tools-methods-project.symptom-checker/recommend-specialists
clj꞉tools-methods-project.symptom-checker꞉> 
#'tools-methods-project.symptom-checker/check-symptoms
clj꞉tools-methods-project.symptom-checker꞉> 
; Evaluating file: symptoms_history.clj
#'tools-methods-project.symptoms-history/clear-history
clj꞉tools-methods-project.symptoms-history꞉> symptom-history
#<Atom@7e6c7402: []>
clj꞉tools-methods-project.symptoms-history꞉> 
; Evaluating file: symptom_checker.clj
#'tools-methods-project.symptom-checker/check-symptoms
clj꞉tools-methods-project.symptom-checker꞉> (check-symptoms "fever" "cough")
; Execution error (ArityException) at tools-methods-project.symptom-checker/eval20889 (form-init4376527062560067531.clj:129).
; Wrong number of args (2) passed to: tools-methods-project.symptom-checker/check-symptoms
clj꞉tools-methods-project.symptom-checker꞉> (check-symptoms ["fever" "cough"])
{:diagnoses ("Flu" "COVID-19" "Bronchitis"),
 :specialists ("General Practitioner" "Infectious Disease Specialist" "Pulmologist")}
clj꞉tools-methods-project.symptom-checker꞉> 
; Evaluating file: symptoms_history.clj
#'tools-methods-project.symptoms-history/clear-history
clj꞉tools-methods-project.symptoms-history꞉> (get-history)
[]
clj꞉tools-methods-project.symptoms-history꞉> (require '[tools-methods-project.symptom-checker :as checker])
(require '[tools-methods-project.symptoms-history :as history])

nil
clj꞉tools-methods-project.symptoms-history꞉> (require '[tools-methods-project.symptom-checker :as checker])
nil
clj꞉tools-methods-project.symptoms-history꞉> (checker/check-symptoms ["fever" "cough"])
{:diagnoses ("Flu" "COVID-19" "Bronchitis"),
 :specialists ("General Practitioner" "Infectious Disease Specialist" "Pulmologist")}
clj꞉tools-methods-project.symptoms-history꞉> (history/get-history)
[{:symptoms ["fever" "cough"], :date #object[java.time.LocalDateTime 0x21e2338f "2024-11-24T16:00:11.734812526"]}]
clj꞉tools-methods-project.symptoms-history꞉> 
; Evaluating file: symptoms_history_test.clj
true
clj꞉tools-methods-project.symptoms-history-test꞉> 
; Evaluating file: symptoms_history_test.clj
true
clj꞉tools-methods-project.symptoms-history-test꞉> 
; Evaluating file: symptoms_history_test.clj
true
clj꞉tools-methods-project.symptoms-history-test꞉> 
; Evaluating file: symptoms_history_test.clj
true
clj꞉tools-methods-project.symptoms-history-test꞉> 
true
clj꞉tools-methods-project.symptoms-history-test꞉> 
; Evaluating file: symptoms_history_test.clj
true
clj꞉tools-methods-project.symptoms-history-test꞉> 
true
clj꞉tools-methods-project.symptoms-history-test꞉> 
; Evaluating file: symptoms_history_test.clj
; 
; FAIL User want to clear symptoms history at (symptoms_history_test.clj:8)
; Expected:
; ["fever"]
; Actual:
; []
; Diffs: expected length of sequence is 1, actual length is 0.
;                 actual is missing 1 element: ("fever")
true
clj꞉tools-methods-project.symptoms-history-test꞉> 
; Evaluating file: symptoms_history_test.clj
true
clj꞉tools-methods-project.symptoms-history-test꞉> 
; Evaluating file: symptoms_history_test.clj
true
clj꞉tools-methods-project.symptoms-history-test꞉> 
; Evaluating file: symptoms_history_test.clj
true
clj꞉tools-methods-project.symptoms-history-test꞉> 
true
clj꞉tools-methods-project.symptoms-history-test꞉> 
; Evaluating file: symptoms_history_test.clj
; 
; FAIL User wants to view his symptom history at (symptoms_history_test.clj:13)
; Expected:
; [{:date "2024-11-24T10:30:00" :symptoms ["fever" "cough"]}
;  {:date "2024-11-24T11:00:04" :symptoms ["headache"]}]
; Actual:
; [{:date "2024-11-24T10:30:00" :symptoms ["fever" "cough"]}
;  {:date "2024-11-24T11:00:00" :symptoms ["headache"]}]
; Diffs: in [1 :date]
;                   strings have 1 difference (94% similarity)
;                   expected: "...1:00:0(4)"
;                   actual:   "...1:00:0(0)"
false
clj꞉tools-methods-project.symptoms-history-test꞉> 
; Evaluating file: symptoms_history_test.clj
true
clj꞉tools-methods-project.symptoms-history-test꞉> 
true
clj꞉tools-methods-project.symptoms-history-test꞉> 
; Evaluating file: symptoms_history_test.clj
true
clj꞉tools-methods-project.symptoms-history-test꞉> 
true
clj꞉tools-methods-project.symptoms-history-test꞉> 
; Evaluating file: symptoms_history_test.clj
; 
; FAIL User wants to add symptoms to history at (symptoms_history_test.clj:17)
; Expected:
; ["fever" "chest pain"]
; Actual:
; [{:date #<java.time.LocalDateTime@35008bcb 2024-11-24T17:02:45.007254839>
;   :symptoms ["fever" "chest pain"]}]
; Diffs: expected length of sequence is 2, actual length is 1.
;                 actual is missing 1 element: ("chest pain")
;               in [0] expected "fever", was {:symptoms ["fever" "chest pain"], :date #object[java.time.LocalDateTime 0x35008bcb "2024-11-24T17:02:45.007254839"]}
true
clj꞉tools-methods-project.symptoms-history-test꞉> 
; 
; FAIL User wants to add symptoms to history at (symptoms_history_test.clj:17)
; Expected:
; ["fever" "chest pain"]
; Actual:
; [{:date #<java.time.LocalDateTime@5e8c158c 2024-11-24T17:02:48.155896615>
;   :symptoms ["fever" "chest pain"]}]
; Diffs: expected length of sequence is 2, actual length is 1.
;                 actual is missing 1 element: ("chest pain")
;               in [0] expected "fever", was {:symptoms ["fever" "chest pain"], :date #object[java.time.LocalDateTime 0x5e8c158c "2024-11-24T17:02:48.155896615"]}
false
clj꞉tools-methods-project.symptoms-history-test꞉> 
; Evaluating file: symptoms_history_test.clj
; 
; FAIL User wants to add symptoms to history at (symptoms_history_test.clj:17)
; Expected:
; [{:date #<clojure.lang.AFunction$1@521e0929> :symptoms ["fever" "chest pain"]}]
; Actual:
; [{:date #<java.time.LocalDateTime@18368103 2024-11-24T17:04:20.725136830>
;   :symptoms ["fever" "chest pain"]}]
; Diffs: in [0 :date] expected #function[clojure.lang.AFunction/1], was #object[java.time.LocalDateTime 0x18368103 "2024-11-24T17:04:20.725136830"]
true
clj꞉tools-methods-project.symptoms-history-test꞉> 
; Evaluating file: symptoms_history_test.clj
; 
; FAIL User wants to add symptoms to history at (symptoms_history_test.clj:17)
; Expected:
; [{:date #<tools_methods_project.symptoms_history_test$eval29258$fn__29259$fn__29260$fn__29263@37451354>
;   :symptoms ["fever" "chest pain"]}]
; Actual:
; [{:date #<java.time.LocalDateTime@51716b5a 2024-11-24T17:06:10.745864378>
;   :symptoms ["fever" "chest pain"]}]
; Diffs: in [0 :date] expected #function[tools-methods-project.symptoms-history-test/eval29258/fn--29259/fn--29260/fn--29263], was #object[java.time.LocalDateTime 0x51716b5a "2024-11-24T17:06:10.745864378"]
true
clj꞉tools-methods-project.symptoms-history-test꞉> 
true
clj꞉tools-methods-project.symptoms-history-test꞉> 
; 
; FAIL User wants to add symptoms to history at (symptoms_history_test.clj:17)
; Expected:
; [{:date #<tools_methods_project.symptoms_history_test$eval29284$fn__29285$fn__29286$fn__29289@1544fa78>
;   :symptoms ["fever" "chest pain"]}]
; Actual:
; [{:date #<java.time.LocalDateTime@642faef 2024-11-24T17:06:48.390912779>
;   :symptoms ["fever" "chest pain"]}]
; Diffs: in [0 :date] expected #function[tools-methods-project.symptoms-history-test/eval29284/fn--29285/fn--29286/fn--29289], was #object[java.time.LocalDateTime 0x642faef "2024-11-24T17:06:48.390912779"]
false
clj꞉tools-methods-project.symptoms-history-test꞉> 
; Evaluating file: symptoms_history_test.clj
; 
; FAIL User wants to add symptoms to history at (symptoms_history_test.clj:17)
; Expected:
; [{:date #<tools_methods_project.symptoms_history_test$eval29324$fn__29325$fn__29326$fn__29329@75a4da21>
;   :symptoms ["fever" "chest pain"]}]
; Actual:
; [{:date #<java.time.LocalDateTime@31dcbe8d 2024-11-24T17:06:49.650044101>
;   :symptoms ["fever" "chest pain"]}]
; Diffs: in [0 :date] expected #function[tools-methods-project.symptoms-history-test/eval29324/fn--29325/fn--29326/fn--29329], was #object[java.time.LocalDateTime 0x31dcbe8d "2024-11-24T17:06:49.650044101"]
true
clj꞉tools-methods-project.symptoms-history-test꞉> 
; Evaluating file: symptoms_history_test.clj
; 
; FAIL User wants to add symptoms to history at (symptoms_history_test.clj:17)
; Expected:
; [{:date #<clojure.lang.AFunction$1@7ee00271> :symptoms ["fever" "chest pain"]}]
; Actual:
; [{:date #<java.time.LocalDateTime@3b4524b9 2024-11-24T17:08:17.665219641>
;   :symptoms ["fever" "chest pain"]}]
; Diffs: in [0 :date] expected #function[clojure.lang.AFunction/1], was #object[java.time.LocalDateTime 0x3b4524b9 "2024-11-24T17:08:17.665219641"]
true
clj꞉tools-methods-project.symptoms-history-test꞉> 
; Evaluating file: symptoms_history_test.clj
; 
; FAIL User wants to add symptoms to history at (symptoms_history_test.clj:17)
; Expected:
; [{:date #<clojure.lang.AFunction$1@521e0929> :symptoms ["fever" "chest pain"]}]
; Actual:
; [{:date #<java.time.LocalDateTime@138ec3e3 2024-11-24T17:08:30.487965831>
;   :symptoms ["fever" "chest pain"]}]
; Diffs: in [0 :date] expected #function[clojure.lang.AFunction/1], was #object[java.time.LocalDateTime 0x138ec3e3 "2024-11-24T17:08:30.487965831"]
true
clj꞉tools-methods-project.symptoms-history-test꞉> 
; Evaluating file: symptoms_history_test.clj
; 
; Syntax error reading source at (test/tools_methods_project/symptoms_history_test.clj:20:93).
; Unmatched delimiter: )
; Evaluation of file symptoms_history_test.clj failed: class clojure.lang.Compiler$CompilerException
clj꞉tools-methods-project.symptoms-history-test꞉> 
; Evaluating file: symptoms_history_test.clj
; 
; Syntax error reading source at (test/tools_methods_project/symptoms_history_test.clj:29:1).
; EOF while reading, starting at line 16
; Evaluation of file symptoms_history_test.clj failed: class clojure.lang.Compiler$CompilerException
clj꞉tools-methods-project.symptoms-history-test꞉> 
; Evaluating file: symptoms_history_test.clj
; 
; Execution error (ArityException) at tools-methods-project.symptoms-history-test/eval29521$fn$fn (symptoms_history_test.clj:21).
; Wrong number of args (0) passed to: midje.checking.checkers.simple/truthy--25991
; Evaluation of file symptoms_history_test.clj failed: class clojure.lang.Compiler$CompilerException
clj꞉tools-methods-project.symptoms-history-test꞉> 
; Evaluating file: symptoms_history_test.clj
; 
; FAIL User wants to add symptoms to history at (symptoms_history_test.clj:17)
; Expected:
; ["fever" "chest pain"]
; Actual:
; [{:date #<java.time.LocalDateTime@323f9215 2024-11-24T17:09:49.948809848>
;   :symptoms ["fever" "chest pain"]}]
; Diffs: expected length of sequence is 2, actual length is 1.
;                 actual is missing 1 element: ("chest pain")
;               in [0] expected "fever", was {:symptoms ["fever" "chest pain"], :date #object[java.time.LocalDateTime 0x323f9215 "2024-11-24T17:09:49.948809848"]}
true
clj꞉tools-methods-project.symptoms-history-test꞉> 
; Evaluating file: symptoms_history_test.clj
; 
; FAIL User wants to add symptoms to history at (symptoms_history_test.clj:17)
; Expected:
; [{:date #<clojure.lang.AFunction$1@521e0929> :symptoms ["fever" "chest pain"]}]
; Actual:
; [{:date #<java.time.LocalDateTime@3047053c 2024-11-24T17:12:27.089726113>
;   :symptoms ["fever" "chest pain"]}]
; Diffs: in [0 :date] expected #function[clojure.lang.AFunction/1], was #object[java.time.LocalDateTime 0x3047053c "2024-11-24T17:12:27.089726113"]
true
clj꞉tools-methods-project.symptoms-history-test꞉> 
; Evaluating file: symptoms_history_test.clj
; 
; FAIL User wants to add symptoms to history at (symptoms_history_test.clj:17)
; Expected:
; [{:date #<clojure.lang.AFunction$1@521e0929> :symptoms ["fever" "chest pain"]}]
; Actual:
; [{:date #<java.time.LocalDateTime@784b401e 2024-11-24T17:12:49.488942468>
;   :symptoms ["fever" "chest pain"]}]
; Diffs: in [0 :date] expected #function[clojure.lang.AFunction/1], was #object[java.time.LocalDateTime 0x784b401e "2024-11-24T17:12:49.488942468"]
true
clj꞉tools-methods-project.symptoms-history-test꞉> 
; Evaluating file: symptoms_history_test.clj
; 
; FAIL User wants to add symptoms to history at (symptoms_history_test.clj:17)
; Expected:
; [{:date #<clojure.lang.AFunction$1@521e0929> :symptoms ["fever" "chest pain"]}]
; Actual:
; [{:date #<java.time.LocalDateTime@53efa7a3 2024-11-24T17:13:01.456808311>
;   :symptoms ["fever" "chest pain"]}]
; Diffs: in [0 :date] expected #function[clojure.lang.AFunction/1], was #object[java.time.LocalDateTime 0x53efa7a3 "2024-11-24T17:13:01.456808311"]
true
clj꞉tools-methods-project.symptoms-history-test꞉> 
; Evaluating file: symptoms_history_test.clj
; 
; FAIL User wants to add symptoms to history at (symptoms_history_test.clj:17)
; Expected:
; [{:date #<clojure.lang.AFunction$1@521e0929> :symptoms ["fever" "chest pain"]}]
; Actual:
; [{:date #<java.time.LocalDateTime@dc1a838 2024-11-24T17:13:25.116342932>
;   :symptoms ["fever" "chest pain"]}]
; Diffs: in [0 :date] expected #function[clojure.lang.AFunction/1], was #object[java.time.LocalDateTime 0xdc1a838 "2024-11-24T17:13:25.116342932"]
true
clj꞉tools-methods-project.symptoms-history-test꞉> 
; Evaluating file: specialist_chat_test.clj
true
clj꞉tools-methods-project.specialist-chat-test꞉> 
