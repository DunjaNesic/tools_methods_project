; This is the Calva REPL Window.
; It's just a file, really, with some special treatment from Calva.
; Use it as a REPL input prompt if you like. (When the REPL is connected.)
; TIPS: The keyboard shortcut `ctrl+alt+o r` shows and focuses this window
; Please see https://calva.io/repl-window/ for more info.
; Happy coding! ♥️

; TIPS: As with any Clojure file when the REPL is connected:
; - `alt+enter` evaluates the current top level form.
; - `ctrl+enter` evaluates the current form.
; Special for this file:
; - `alt+up` and `alt+down` traverse up and down the REPL command history
;    when the cursor is after the last contents at the prompt
; 
; See also the Calva Inspector: https://calva.io/inspector/

PLEASE NOTE
We will update the default location of this file.
The new default location will be
  "<projectRootPath>/.calva/repl.calva-repl"
For now the legacy path is used by default.
To give yourself a smooth transition, you can opt in
to the change, by configuring this setting as false:
  "calva.useLegacyReplWindowPath"
and then add "**/.calva/repl.calva-repl" to your ".gitignore" file.


This file is configured as the output destination for all REPL output.
You can configure this with the setting:
  "calva.outputDestinations"


; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: (cd /home/dunja/project/tools_methods_project; lein update-in :dependencies conj '[nrepl,"1.1.1"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.47.1"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless)
; Using host:port 127.0.0.1:42359 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉tools-methods-project.core꞉> 
"Please see https://calva.io/output/#about-stdout-in-the-repl-window
about why stdout printed to this file is prepended with `;` to be line comments."
clj꞉tools-methods-project.core꞉> 
; Jack-in done.
clj꞉tools-methods-project.core꞉> 
; Evaluating file: json_data.clj
#'tools-methods-project.helpers.json-data/faqs
clj꞉tools-methods-project.helpers.json-data꞉> 
; Evaluating file: project.clj
; 
; ; clj  user 
; Syntax error compiling at (project.clj:1:1).
; Unable to resolve symbol: defproject in this context
; Evaluation of file project.clj failed: class clojure.lang.Compiler$CompilerException
clj꞉user꞉> 
; Evaluating file: user.clj
#'tools-methods-project.user/logout-patient
clj꞉tools-methods-project.user꞉> 
; Evaluating file: user.clj
; 
; Execution error (FileNotFoundException) at tools-methods-project.user/eval15328$loading (user.clj:1).
; Could not locate honey/sql__init.class, honey/sql.clj or honey/sql.cljc on classpath.
; Evaluation of file user.clj failed: class clojure.lang.Compiler$CompilerException
clj꞉tools-methods-project.user꞉> 
; Evaluating file: user.clj
; 
; Execution error (FileNotFoundException) at tools-methods-project.user/eval15337$loading (user.clj:1).
; Could not locate honey/sql/helpers__init.class, honey/sql/helpers.clj or honey/sql/helpers.cljc on classpath.
; Evaluation of file user.clj failed: class clojure.lang.Compiler$CompilerException
clj꞉tools-methods-project.user꞉> 
; Evaluating file: user.clj
#'tools-methods-project.user/logout-patient
clj꞉tools-methods-project.user꞉> (get-all-patients)
[#:patient{:id 4,
           :email "sandra@gmail.com",
           :password
           "bcrypt+sha512$5417ed304b0a7a7e9c0690002d31b113$12$2f147f98efaae2b49eb599d74197bb341da2e309299b0729"}
 #:patient{:id 5,
           :email "aaa@gmail.com",
           :password
           "bcrypt+sha512$ca042c08c42fd73f29ce8d7d911f777b$12$f1e5b8373eb4ab81cced2613f86f974e913bdaf63cd00a2a"}
 #:patient{:id 6,
           :email "bbb@gmail.com",
           :password
           "bcrypt+sha512$aa6db0eac16358dfcd1c7c88dbd91f4f$12$e32e9d66cd9132e0a533421d70eaf053c2ef646c86b44ebf"}
 #:patient{:id 7,
           :email "test@gmail.com",
           :password
           "bcrypt+sha512$7104800b33c52eccda35ea8dbdcbeb16$12$3190f96811aaaaea30c0e5b3a45329a3d81cb0d0ffd2c3d5"}]
clj꞉tools-methods-project.user꞉> 
; Evaluating file: user.clj
; 
; Execution error (FileNotFoundException) at tools-methods-project.user/eval15366$loading (user.clj:1).
; Could not locate honey/sql__init.class, honey/sql.clj or honey/sql.cljc on classpath.
; Evaluation of file user.clj failed: class clojure.lang.Compiler$CompilerException
clj꞉tools-methods-project.user꞉> 
; nREPL Connection was closed
; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: (cd /home/dunja/project/tools_methods_project; lein update-in :dependencies conj '[nrepl,"1.1.1"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.47.1"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless)
; Using host:port 127.0.0.1:34757 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉tools-methods-project.core꞉> 
nil
clj꞉tools-methods-project.user꞉> 
; Jack-in done.
clj꞉tools-methods-project.user꞉> 
; Evaluating file: user.clj
#'tools-methods-project.user/logout-patient
clj꞉tools-methods-project.user꞉> (get-all-patients)
[#:patient{:id 4,
           :email "sandra@gmail.com",
           :password
           "bcrypt+sha512$5417ed304b0a7a7e9c0690002d31b113$12$2f147f98efaae2b49eb599d74197bb341da2e309299b0729"}
 #:patient{:id 5,
           :email "aaa@gmail.com",
           :password
           "bcrypt+sha512$ca042c08c42fd73f29ce8d7d911f777b$12$f1e5b8373eb4ab81cced2613f86f974e913bdaf63cd00a2a"}
 #:patient{:id 6,
           :email "bbb@gmail.com",
           :password
           "bcrypt+sha512$aa6db0eac16358dfcd1c7c88dbd91f4f$12$e32e9d66cd9132e0a533421d70eaf053c2ef646c86b44ebf"}
 #:patient{:id 7,
           :email "test@gmail.com",
           :password
           "bcrypt+sha512$7104800b33c52eccda35ea8dbdcbeb16$12$3190f96811aaaaea30c0e5b3a45329a3d81cb0d0ffd2c3d5"}]
clj꞉tools-methods-project.user꞉> (register-patient "dzoni@gmail.com" "dzoni")
{:status :success, :message "Patient registered successfully"}
clj꞉tools-methods-project.user꞉> (get-all-patients)
[#:patient{:id 4,
           :email "sandra@gmail.com",
           :password
           "bcrypt+sha512$5417ed304b0a7a7e9c0690002d31b113$12$2f147f98efaae2b49eb599d74197bb341da2e309299b0729"}
 #:patient{:id 5,
           :email "aaa@gmail.com",
           :password
           "bcrypt+sha512$ca042c08c42fd73f29ce8d7d911f777b$12$f1e5b8373eb4ab81cced2613f86f974e913bdaf63cd00a2a"}
 #:patient{:id 6,
           :email "bbb@gmail.com",
           :password
           "bcrypt+sha512$aa6db0eac16358dfcd1c7c88dbd91f4f$12$e32e9d66cd9132e0a533421d70eaf053c2ef646c86b44ebf"}
 #:patient{:id 7,
           :email "test@gmail.com",
           :password
           "bcrypt+sha512$7104800b33c52eccda35ea8dbdcbeb16$12$3190f96811aaaaea30c0e5b3a45329a3d81cb0d0ffd2c3d5"}
 #:patient{:id 8,
           :email "dzoni@gmail.com",
           :password
           "bcrypt+sha512$e8103ea777bcbd84be144a9208516317$12$b2c0455fa86a62fa7fc6a0378df9ff9d18e4d01a60128c1f"}]
clj꞉tools-methods-project.user꞉> (login-patient "dzoni@gmail.com" "dzoni")
{:status :success,
 :message "Login successful",
 :patient
 #:patient{:id 8,
           :email "dzoni@gmail.com",
           :password
           "bcrypt+sha512$e8103ea777bcbd84be144a9208516317$12$b2c0455fa86a62fa7fc6a0378df9ff9d18e4d01a60128c1f"}}
clj꞉tools-methods-project.user꞉> (login-patient "dzoni@gmail.com" "dnfdj")
{:status :error, :message "Invalid password"}
clj꞉tools-methods-project.user꞉> (login-patient "dzoni@gmail.com" "dnfdj")
{:status :error, :message "Invalid password"}
clj꞉tools-methods-project.user꞉> (login-patient "sandra@gmail.com" "sandra")
{:status :success,
 :message "Login successful",
 :patient
 #:patient{:id 4,
           :email "sandra@gmail.com",
           :password
           "bcrypt+sha512$5417ed304b0a7a7e9c0690002d31b113$12$2f147f98efaae2b49eb599d74197bb341da2e309299b0729"}}
clj꞉tools-methods-project.user꞉> (logout-patient "sandra@gmail.com")
{:status :success, :message "Logged out successfully"}
clj꞉tools-methods-project.user꞉> 
